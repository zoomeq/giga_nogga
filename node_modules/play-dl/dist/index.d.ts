export { playlist_info, video_basic_info, video_info, yt_validate, extractID } from './YouTube';
export { spotify, sp_validate, refreshToken, is_expired } from './Spotify';
export { soundcloud, so_validate } from './SoundCloud';
interface SearchOptions {
    limit?: number;
    source?: {
        youtube?: 'video' | 'playlist' | 'channel';
        spotify?: 'album' | 'playlist' | 'track';
        soundcloud?: 'tracks' | 'playlists' | 'albums';
    };
}
import { InfoData, StreamOptions } from './YouTube/stream';
import { SoundCloudTrack, Stream as SoStream } from './SoundCloud/classes';
import { LiveStreaming, Stream as YTStream } from './YouTube/classes/LiveStream';
export declare function stream(url: string, options?: StreamOptions): Promise<YTStream | LiveStreaming | SoStream>;
export declare function search(query: string, options?: SearchOptions): Promise<(import("./Spotify/classes").SpotifyVideo | import("./Spotify/classes").SpotifyPlaylist | import("./Spotify/classes").SpotifyAlbum)[] | (SoundCloudTrack | import("./SoundCloud/classes").SoundCloudPlaylist)[] | (import("./YouTube/classes/Channel").Channel | import("./YouTube/classes/Video").Video | import("./YouTube/classes/Playlist").PlayList)[] | undefined>;
export declare function stream_from_info(info: InfoData | SoundCloudTrack, options?: StreamOptions): Promise<YTStream | LiveStreaming | SoStream>;
export declare function validate(url: string): Promise<"so_playlist" | "so_track" | "sp_track" | "sp_album" | "sp_playlist" | "yt_video" | "yt_playlist" | false>;
export declare function authorization(): void;
//# sourceMappingURL=index.d.ts.map