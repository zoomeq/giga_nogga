{"version":3,"file":"cipher.js","sourceRoot":"","sources":["../../../play-dl/YouTube/utils/cipher.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url';\r\nimport { request } from './request';\r\nimport querystring from 'querystring';\r\n\r\ninterface formatOptions {\r\n    url?: string;\r\n    sp?: string;\r\n    signatureCipher?: string;\r\n    cipher?: string;\r\n    s?: string;\r\n}\r\nconst var_js = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\r\nconst singlequote_js = `'[^'\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^'\\\\\\\\]*)*'`;\r\nconst duoblequote_js = `\"[^\"\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^\"\\\\\\\\]*)*\"`;\r\nconst quote_js = `(?:${singlequote_js}|${duoblequote_js})`;\r\nconst key_js = `(?:${var_js}|${quote_js})`;\r\nconst prop_js = `(?:\\\\.${var_js}|\\\\[${quote_js}\\\\])`;\r\nconst empty_js = `(?:''|\"\")`;\r\nconst reverse_function = ':function\\\\(a\\\\)\\\\{' + '(?:return )?a\\\\.reverse\\\\(\\\\)' + '\\\\}';\r\nconst slice_function = ':function\\\\(a,b\\\\)\\\\{' + 'return a\\\\.slice\\\\(b\\\\)' + '\\\\}';\r\nconst splice_function = ':function\\\\(a,b\\\\)\\\\{' + 'a\\\\.splice\\\\(0,b\\\\)' + '\\\\}';\r\nconst swap_function =\r\n    ':function\\\\(a,b\\\\)\\\\{' +\r\n    'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b(?:%a\\\\.length)?\\\\];a\\\\[b(?:%a\\\\.length)?\\\\]=c(?:;return a)?' +\r\n    '\\\\}';\r\nconst obj_regexp = new RegExp(\r\n    `var (${var_js})=\\\\{((?:(?:${key_js}${reverse_function}|${key_js}${slice_function}|${key_js}${splice_function}|${key_js}${swap_function}),?\\\\r?\\\\n?)+)\\\\};`\r\n);\r\nconst function_regexp = new RegExp(\r\n    `${\r\n        `function(?: ${var_js})?\\\\(a\\\\)\\\\{` + `a=a\\\\.split\\\\(${empty_js}\\\\);\\\\s*` + `((?:(?:a=)?${var_js}`\r\n    }${prop_js}\\\\(a,\\\\d+\\\\);)+)` +\r\n        `return a\\\\.join\\\\(${empty_js}\\\\)` +\r\n        `\\\\}`\r\n);\r\nconst reverse_regexp = new RegExp(`(?:^|,)(${key_js})${reverse_function}`, 'm');\r\nconst slice_regexp = new RegExp(`(?:^|,)(${key_js})${slice_function}`, 'm');\r\nconst splice_regexp = new RegExp(`(?:^|,)(${key_js})${splice_function}`, 'm');\r\nconst swap_regexp = new RegExp(`(?:^|,)(${key_js})${swap_function}`, 'm');\r\n\r\nexport function js_tokens(body: string) {\r\n    const function_action = function_regexp.exec(body);\r\n    const object_action = obj_regexp.exec(body);\r\n    if (!function_action || !object_action) return null;\r\n\r\n    const object = object_action[1].replace(/\\$/g, '\\\\$');\r\n    const object_body = object_action[2].replace(/\\$/g, '\\\\$');\r\n    const function_body = function_action[1].replace(/\\$/g, '\\\\$');\r\n\r\n    let result = reverse_regexp.exec(object_body);\r\n    const reverseKey = result && result[1].replace(/\\$/g, '\\\\$').replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n    result = slice_regexp.exec(object_body);\r\n    const sliceKey = result && result[1].replace(/\\$/g, '\\\\$').replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n    result = splice_regexp.exec(object_body);\r\n    const spliceKey = result && result[1].replace(/\\$/g, '\\\\$').replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n    result = swap_regexp.exec(object_body);\r\n    const swapKey = result && result[1].replace(/\\$/g, '\\\\$').replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n    const keys = `(${[reverseKey, sliceKey, spliceKey, swapKey].join('|')})`;\r\n    const myreg = `(?:a=)?${object}(?:\\\\.${keys}|\\\\['${keys}'\\\\]|\\\\[\"${keys}\"\\\\])` + `\\\\(a,(\\\\d+)\\\\)`;\r\n    const tokenizeRegexp = new RegExp(myreg, 'g');\r\n    const tokens = [];\r\n    while ((result = tokenizeRegexp.exec(function_body)) !== null) {\r\n        const key = result[1] || result[2] || result[3];\r\n        switch (key) {\r\n            case swapKey:\r\n                tokens.push(`sw${result[4]}`);\r\n                break;\r\n            case reverseKey:\r\n                tokens.push('rv');\r\n                break;\r\n            case sliceKey:\r\n                tokens.push(`sl${result[4]}`);\r\n                break;\r\n            case spliceKey:\r\n                tokens.push(`sp${result[4]}`);\r\n                break;\r\n        }\r\n    }\r\n    return tokens;\r\n}\r\n\r\nfunction deciper_signature(tokens: string[], signature: string) {\r\n    let sig = signature.split('');\r\n    const len = tokens.length;\r\n    for (let i = 0; i < len; i++) {\r\n        let token = tokens[i],\r\n            pos;\r\n        switch (token.slice(0, 2)) {\r\n            case 'sw':\r\n                pos = parseInt(token.slice(2));\r\n                sig = swappositions(sig, pos);\r\n                break;\r\n            case 'rv':\r\n                sig = sig.reverse();\r\n                break;\r\n            case 'sl':\r\n                pos = parseInt(token.slice(2));\r\n                sig = sig.slice(pos);\r\n                break;\r\n            case 'sp':\r\n                pos = parseInt(token.slice(2));\r\n                sig.splice(0, pos);\r\n                break;\r\n        }\r\n    }\r\n    return sig.join('');\r\n}\r\n\r\nfunction swappositions(array: string[], position: number) {\r\n    const first = array[0];\r\n    array[0] = array[position];\r\n    array[position] = first;\r\n    return array;\r\n}\r\n\r\nfunction download_url(format: formatOptions, sig: string) {\r\n    let decoded_url;\r\n    if (!format.url) return;\r\n    decoded_url = format.url;\r\n\r\n    decoded_url = decodeURIComponent(decoded_url);\r\n\r\n    const parsed_url = new URL(decoded_url);\r\n    parsed_url.searchParams.set('ratebypass', 'yes');\r\n\r\n    if (sig) {\r\n        parsed_url.searchParams.set(format.sp || 'signature', sig);\r\n    }\r\n    format.url = parsed_url.toString();\r\n}\r\n\r\nexport async function format_decipher(formats: formatOptions[], html5player: string) {\r\n    const body = await request(html5player);\r\n    const tokens = js_tokens(body);\r\n    formats.forEach((format) => {\r\n        const cipher = format.signatureCipher || format.cipher;\r\n        if (cipher) {\r\n            Object.assign(format, querystring.parse(cipher));\r\n            delete format.signatureCipher;\r\n            delete format.cipher;\r\n        }\r\n        let sig;\r\n        if (tokens && format.s) {\r\n            sig = deciper_signature(tokens, format.s);\r\n            download_url(format, sig);\r\n            delete format.s;\r\n            delete format.sp;\r\n        }\r\n    });\r\n    return formats;\r\n}\r\n"]}